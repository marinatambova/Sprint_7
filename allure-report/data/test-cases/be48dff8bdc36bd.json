{"uid":"be48dff8bdc36bd","name":"test_courier_login_missing_field[password]","fullName":"tests.test_courier_login.TestCourierLogin#test_courier_login_missing_field","historyId":"2914913a77225d584d9a7aa52a16913a","time":{"start":1726601178607,"stop":1726601238717,"duration":60110},"description":"Проверка авторизации без одного из обязательных полей.","descriptionHtml":"<p>Проверка авторизации без одного из обязательных полей.</p>\n","status":"skipped","statusMessage":"XFAIL reason: Сервер вернул 504 Gateway Timeout при отсутствии поля password\n\n_pytest.outcomes.XFailed: Сервер вернул 504 Gateway Timeout при отсутствии поля password","statusTrace":"self = <test_courier_login.TestCourierLogin object at 0x0000016DEBD64DA0>\nnew_courier = {'id': 385119, 'login': 'couxbgqybs', 'password': 'qkzlttifnh'}, missing_field = 'password'\n\n    @pytest.mark.parametrize(\"missing_field\", [\"login\", \"password\"])\n    def test_courier_login_missing_field(self, new_courier, missing_field):\n        \"\"\"Проверка авторизации без одного из обязательных полей.\"\"\"\n        payload = {\n            \"login\": new_courier[\"login\"],\n            \"password\": new_courier[\"password\"]\n        }\n    \n        payload.pop(missing_field)  # Удаляем одно из обязательных полей\n    \n        response = requests.post(f'{BASE_URL}/api/v1/courier/login', json=payload)\n    \n        # Добавляем логирование для отладки\n        print(f\"Status code: {response.status_code}\")\n        print(f\"Response text: {response.text}\")\n    \n        # Проверяем, если сервер возвращает 504, помечаем тест как xfail\n        if response.status_code == 504:\n>           pytest.xfail(f\"Сервер вернул 504 Gateway Timeout при отсутствии поля {missing_field}\")\nE           _pytest.outcomes.XFailed: Сервер вернул 504 Gateway Timeout при отсутствии поля password\n\ntests\\test_courier_login.py:39: XFailed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":true,"beforeStages":[{"name":"new_courier","time":{"start":1726601178358,"stop":1726601178606,"duration":248},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"Проверка авторизации без одного из обязательных полей.","status":"skipped","statusMessage":"XFAIL reason: Сервер вернул 504 Gateway Timeout при отсутствии поля password\n\n_pytest.outcomes.XFailed: Сервер вернул 504 Gateway Timeout при отсутствии поля password","statusTrace":"self = <test_courier_login.TestCourierLogin object at 0x0000016DEBD64DA0>\nnew_courier = {'id': 385119, 'login': 'couxbgqybs', 'password': 'qkzlttifnh'}, missing_field = 'password'\n\n    @pytest.mark.parametrize(\"missing_field\", [\"login\", \"password\"])\n    def test_courier_login_missing_field(self, new_courier, missing_field):\n        \"\"\"Проверка авторизации без одного из обязательных полей.\"\"\"\n        payload = {\n            \"login\": new_courier[\"login\"],\n            \"password\": new_courier[\"password\"]\n        }\n    \n        payload.pop(missing_field)  # Удаляем одно из обязательных полей\n    \n        response = requests.post(f'{BASE_URL}/api/v1/courier/login', json=payload)\n    \n        # Добавляем логирование для отладки\n        print(f\"Status code: {response.status_code}\")\n        print(f\"Response text: {response.text}\")\n    \n        # Проверяем, если сервер возвращает 504, помечаем тест как xfail\n        if response.status_code == 504:\n>           pytest.xfail(f\"Сервер вернул 504 Gateway Timeout при отсутствии поля {missing_field}\")\nE           _pytest.outcomes.XFailed: Сервер вернул 504 Gateway Timeout при отсутствии поля password\n\ntests\\test_courier_login.py:39: XFailed","steps":[],"attachments":[{"uid":"ffdcfa2ab69f4a35","name":"stdout","source":"ffdcfa2ab69f4a35.txt","type":"text/plain","size":52}],"parameters":[],"attachmentsCount":1,"shouldDisplayMessage":true,"stepsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"new_courier::0","time":{"start":1726601238786,"stop":1726601239163,"duration":377},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"courier_login"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_courier_login"},{"name":"subSuite","value":"TestCourierLogin"},{"name":"host","value":"SC-WS-01209"},{"name":"thread","value":"28080-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_courier_login"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"missing_field","value":"'password'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"2c9135a63d72d810","status":"failed","statusDetails":"AssertionError: Должен быть код 400 при отсутствии поля password\nassert 504 == 400\n +  where 504 = <Response [504]>.status_code","time":{"start":1726599542397,"stop":1726599602511,"duration":60114}}],"categories":[],"tags":["courier_login"]},"source":"be48dff8bdc36bd.json","parameterValues":["'password'"]}